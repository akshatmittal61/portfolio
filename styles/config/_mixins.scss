@mixin responsive($breakpoint) {
	@if $breakpoint ==phone {
		@media (min-width: 320px) and (max-width: 671.5px) {
			@content;
		}
	}

	@if $breakpoint ==tablet {
		@media (min-width: 672px) and (max-width: 1055.5px) {
			@content;
		}
	}

	@if $breakpoint ==phone-landscape {
		@media (max-width: 900px) and (orientation: landscape) {
			@content;
		}
	}

	@if $breakpoint ==desktop {
		@media (min-width: 1056px) and (max-width: 1311.5px) {
			@content;
		}
	}

	@if $breakpoint ==large-desktop {
		@media (min-width: 1312px) and (max-width: 1583.4px) {
			@content;
		}
	}

	@if $breakpoint ==extra-large-desktop {
		@media (min-width: 1584px) {
			@content;
		}
	}

	@if $breakpoint ==vertical-screens {
		@media (max-height: 540px) {
			@content;
		}
	}

	@if $breakpoint ==vertical-screen-modal {
		@media (max-height: 768px) {
			@content;
		}
	}
}

@mixin color-scheme($mode) {
	@if $mode ==light {
		@media (prefers-color-scheme: light) {
			@content;
		}
	} @else if $mode ==dark {
		@media (prefers-color-scheme: dark) {
			@content;
		}
	}
}

@mixin theme($theme) {
	// if body has no data-theme attribute, then apply the styles

	@if $theme ==light {
		body:not([data-theme]) & {
			@content;
		}
	}

	@if $theme ==light {
		body[data-theme="light"] & {
			@content;
		}
	} @else if $theme ==dark {
		body[data-theme="dark"] & {
			@content;
		}
	} @else {
		@content;
	}
}

@mixin font(
	$font-family: Poppins,
	$font-size: inherit,
	$font-weight: normal,
	$line-height: initial,
	$color: initial,
	$letter-spacing: initial
) {
	font-family:
		$font-family,
		-apple-system,
		BlinkMacSystemFont,
		"Segoe UI",
		Roboto,
		Oxygen,
		Ubuntu,
		Cantarell,
		"Open Sans",
		"Helvetica Neue",
		sans-serif;
	font-size: $font-size;
	font-weight: $font-weight;
	line-height: $line-height;
	color: $color;
	letter-spacing: $letter-spacing;
}

@mixin hide-scrollbar {
	&::-webkit-scrollbar {
		width: 0;
		height: 0;
		-ms-overflow-style: none;
		scrollbar-width: none;

		&-thumb {
			background: transparent !important;
		}
	}
}

@mixin init-button {
	all: unset;
	box-sizing: border-box;
	display: inline-flex;
	justify-content: center;
	align-items: center;
	vertical-align: middle;
	cursor: pointer;
	white-space: nowrap;
	touch-action: manipulation;
	user-select: none;
	transition: all 0.3s ease-in-out;
}

@mixin rotating-background($color1, $color2, $duration: 5s, $angle: 0deg) {
	background: linear-gradient($angle, $color1, $color2);
	background-size: 200% 200%;
	animation: rotating-background $duration infinite linear;

	@keyframes rotating-background {
		@for $i from 0 through 100 {
			#{$i}#{"%"} {
				background-image: linear-gradient(
					#{$i * 3.6}deg,
					$color1,
					$color2
				);
			}
		}
	}
}

@mixin markdown-styles {
	h1 {
		padding-top: 5rem;
		font-size: 2rem;

		@include responsive(tablet) {
			margin: 2rem 0;
			padding-top: 1rem;
		}
	}

	h1 + p {
		text-align: right;
		font-size: 1.5rem;
		color: rgb(187, 187, 187);

		@include responsive(tablet) {
			font-size: 1rem;
		}
	}

	h2,
	h3 {
		margin: 1.5rem 0;
	}

	p {
		@include responsive(tablet) {
			margin: 1rem 0;
		}
	}

	& & h & h1 + p + p {
		text-align: right;
		font-size: 1.2rem;
		color: rgb(187, 187, 187);
	}

	& p {
		margin: 1rem 0;
		font-size: 1rem;
	}

	& li {
		font-size: 2.2rem;
	}

	& a {
		display: inline-block;
		color: var(--theme-purple);
	}

	h1 {
		color: #7360dd;
		font-size: 32px;
		line-height: 150%;
		font-weight: 500;
		margin: 16px 0;

		@include responsive(phone) {
			font-size: 18px;
			line-height: 150%;
		}
	}

	p,
	li {
		font-size: 16px;
		line-height: 150%;

		@include responsive(phone) {
			font-size: 14px;
			line-height: 150%;
		}
	}

	img {
		object-fit: cover;
		max-width: 100%;
		border-radius: 8px;
	}

	section {
		margin: 48px 0;
	}

	p {
		margin: 8px 0;
	}

	ul {
		list-style: none;
		margin: 16px 48px;

		li::marker {
			content: " > ";
		}

		@include responsive(phone) {
			margin: 16px;
		}
	}

	li {
		padding: 4px 16px;
	}

	a {
		color: var(--base-primary-700);
		text-decoration: none;
		position: relative;

		&::after {
			content: "";
			position: absolute;
			top: 95%;
			left: 0;
			width: 0;
			height: 1px;
			background-color: #1155cc;
			transition: all var(--transition-time) ease-in-out;
		}

		&:hover::after {
			width: 100%;
		}
	}

	blockquote {
		padding: 16px 32px;
		background-color: var(--bgcolor);
		border: 2px solid var(--indigo);
		position: relative;
		transform-style: preserve-3d;
		margin: 16px 0;

		&::before {
			content: "";
			position: absolute;
			background-color: var(--indigo);
			width: 100%;
			height: 100%;
			top: 10%;
			left: 1%;
			transform: translateZ(-1px);
			transition: all var(--transition-time) ease-in-out;
		}

		&:hover::before {
			top: 0;
			left: 0;
		}

		cite {
			border-left: 4px solid var(--back-shadow);
			padding: 1.6px 8px;
			margin: 4px 0;
		}
	}

	code {
		margin: 16px;
		background-color: var(--tcolor-700);
		color: var(--bgcolor);
		border-radius: 10px;
		padding: 16px 32px;
		display: flex;
		flex-flow: column;
		overflow: hidden;
		overflow-x: auto;
		margin: 16px 0;

		span {
			white-space: nowrap;

			&::-webkit-scrollbar {
				height: 4px;
			}
		}
	}

	table {
		border-spacing: 1;
		border-collapse: collapse;
		background: white;
		border-radius: 10px;
		overflow: hidden;
		width: 100%;
		margin: 0 auto;
		position: relative;

		* {
			position: relative;
		}

		thead th {
			height: 60px;
			background: #36304a;
			color: #ffffff;
			font-family: OpenSans-Regular;
			font-size: 18px;
			color: #fff;
			line-height: 150%;
			font-weight: unset;
			padding-left: 8px;
			text-align: left;
		}

		tbody tr {
			height: 50px;
			font-family: OpenSans-Regular;
			font-size: 15px;
			color: #808080;
			line-height: 150%;
			font-weight: unset;

			td {
				padding: 0 8px;
			}

			&:last-child {
				border: 0;
			}

			&:nth-child(even) {
				background-color: #f5f5f5;
			}

			&:hover {
				color: #555555;
				background-color: #f5f5f5;
				cursor: pointer;
			}
		}
	}
}
